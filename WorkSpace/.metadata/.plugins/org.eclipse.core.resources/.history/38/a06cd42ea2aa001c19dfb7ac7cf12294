package com.q5.controller;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.view;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.q5.model.Employee;
import com.q5.service.EmployeeService;

@Controller
public class EmployeeController {
	@Autowired
	private EmployeeService employeeService;

	@RequestMapping("/")
	public String form() {
		return "form";
	}

	@RequestMapping("/empform")
	public String showform(Model m) {
		m.addAttribute("command", new Employee());
		return "empform";
	}

	@RequestMapping(value = "/create", method = RequestMethod.POST)
	public String create(@ModelAttribute("emp") Employee employee) {
		employeeService.createEmployee(employee.getEmployeeName(), employee.getEmployeeDepartment(),
				employee.getEmployeeDesignation(), employee.getEmployeeSalary());
		return "redirect:/viewemp";
	}

	@GetMapping("/getAll")
	public ModelAndView getAll() {
		view = new ModelAndView("viewemp");
		view.addObject("list", employeeService.getAll());
		return view;
	}

	@RequestMapping("/getbyName/{employeeName}")
	public ModelAndView getbyName(@PathVariable String employeeName) {
		view = new ModelAndView("empeditform");
		view.addObject("command", employeeService.getbyName(employeeName));
		return view;
	}

	@PostMapping("/update")
	public ModelAndView update(@RequestParam String employeeName, @RequestParam String employeeDepartment,
			@RequestParam String employeeDesignation, @RequestParam long employeeSalary) {
		view = new ModelAndView("viewemp");
		employeeService.update(employeeName, employeeDepartment, employeeDesignation, employeeSalary);
		return view;
	}

	@GetMapping("/deleteAll")
	public String deleteAll() {
		employeeService.deleteAll();
		return "redirect:/viewemp";
	}

	@GetMapping("/deleteByName/{employeeName}")
	public ModelAndView deleteByName(@PathVariable String employeeName) {
		view = new ModelAndView("viewemp");
		employeeService.deleteByName(employeeName);
		return view;
	}

}
